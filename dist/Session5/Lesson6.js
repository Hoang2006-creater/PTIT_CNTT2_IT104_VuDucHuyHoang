"use strict";
// ------------------- L·ªõp Book -------------------
class Book {
    constructor(id, title, author, stock, status // "available", "borrowed", ...
    ) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.stock = stock;
        this.status = status;
    }
    getId() {
        return this.id;
    }
    getTitle() {
        return this.title;
    }
    getAuthor() {
        return this.author;
    }
    getStock() {
        return this.stock;
    }
    getStatus() {
        return this.status;
    }
    setStock(stock) {
        this.stock = stock;
    }
    setStatus(status) {
        this.status = status;
    }
}
// ------------------- L·ªõp LendedBook -------------------
class LendedBook {
    constructor(memberId, bookId, dueDate) {
        this.memberId = memberId;
        this.bookId = bookId;
        this.dueDate = dueDate;
    }
    getMemberId() {
        return this.memberId;
    }
    getBookId() {
        return this.bookId;
    }
    getDueDate() {
        return this.dueDate;
    }
}
// ------------------- L·ªõp Member -------------------
class Member {
    constructor(id, name, contact, status = "active" // "active" ho·∫∑c "locked"
    ) {
        this.id = id;
        this.name = name;
        this.contact = contact;
        this.lendedBooks = [];
        this.status = status;
    }
    getId() {
        return this.id;
    }
    getName() {
        return this.name;
    }
    getContact() {
        return this.contact;
    }
    getLendedBooks() {
        return this.lendedBooks;
    }
    getStatus() {
        return this.status;
    }
    setStatus(status) {
        this.status = status;
    }
    lendBook(book) {
        this.lendedBooks.push(book);
    }
}
// ------------------- L·ªõp Library -------------------
class Library {
    constructor() {
        this.books = [];
        this.members = [];
    }
    // Th√™m s√°ch
    addBook(book) {
        this.books.push(book);
        console.log(`üìö ƒê√£ th√™m s√°ch: ${book.getTitle()}`);
    }
    // Hi·ªÉn th·ªã t·∫•t c·∫£ s√°ch
    showBooks() {
        if (this.books.length === 0) {
            console.log("Kh√¥ng c√≥ s√°ch n√†o trong th∆∞ vi·ªán.");
            return;
        }
        console.log("\nüìñ Danh s√°ch s√°ch trong th∆∞ vi·ªán:");
        this.books.forEach((book) => {
            console.log(`ID: ${book.getId()}, Ti√™u ƒë·ªÅ: ${book.getTitle()}, T√°c gi·∫£: ${book.getAuthor()}, S·ªë l∆∞·ª£ng: ${book.getStock()}, T√¨nh tr·∫°ng: ${book.getStatus()}`);
        });
    }
}
// ------------------- Demo -------------------
const library = new Library();
const book1 = new Book(1, "L·∫≠p tr√¨nh TypeScript", "Nguy·ªÖn VƒÉn A", 5, "available");
const book2 = new Book(2, "H·ªçc Java OOP", "Tr·∫ßn Th·ªã B", 3, "available");
const book3 = new Book(3, "C·∫•u tr√∫c d·ªØ li·ªáu & Gi·∫£i thu·∫≠t", "L√™ VƒÉn C", 2, "available");
// Th√™m s√°ch v√†o th∆∞ vi·ªán
library.addBook(book1);
library.addBook(book2);
library.addBook(book3);
// Xem s√°ch trong th∆∞ vi·ªán
library.showBooks();
