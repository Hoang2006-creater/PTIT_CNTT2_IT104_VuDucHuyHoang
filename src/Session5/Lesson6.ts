// ------------------- L·ªõp Book -------------------
class Book {
    constructor(
        private id: number,
        private title: string,
        private author: string,
        private stock: number,
        private status: string // "available", "borrowed", ...
    ) {}

    getId(): number {
        return this.id;
    }
    getTitle(): string {
        return this.title;
    }
    getAuthor(): string {
        return this.author;
    }
    getStock(): number {
        return this.stock;
    }
    getStatus(): string {
        return this.status;
    }

    setStock(stock: number): void {
        this.stock = stock;
    }
    setStatus(status: string): void {
        this.status = status;
    }
}

// ------------------- L·ªõp LendedBook -------------------
class LendedBook {
    constructor(
        private memberId: number,
        private bookId: number,
        private dueDate: string
    ) {}

    getMemberId(): number {
        return this.memberId;
    }
    getBookId(): number {
        return this.bookId;
    }
    getDueDate(): string {
        return this.dueDate;
    }
}

// ------------------- L·ªõp Member -------------------
class Member {
    private lendedBooks: LendedBook[] = [];

    constructor(
        private id: number,
        private name: string,
        private contact: string,
        status: string = "active" // "active" ho·∫∑c "locked"
    ) {
        this.status = status;
    }

    private status: string;

    getId(): number {
        return this.id;
    }
    getName(): string {
        return this.name;
    }
    getContact(): string {
        return this.contact;
    }
    getLendedBooks(): LendedBook[] {
        return this.lendedBooks;
    }
    getStatus(): string {
        return this.status;
    }

    setStatus(status: string): void {
        this.status = status;
    }

    lendBook(book: LendedBook): void {
        this.lendedBooks.push(book);
    }
}

// ------------------- L·ªõp Library -------------------
class Library {
    private books: Book[] = [];
    private members: Member[] = [];

    // Th√™m s√°ch
    addBook(book: Book): void {
        this.books.push(book);
        console.log(`üìö ƒê√£ th√™m s√°ch: ${book.getTitle()}`);
    }

    // Hi·ªÉn th·ªã t·∫•t c·∫£ s√°ch
    showBooks(): void {
        if (this.books.length === 0) {
            console.log("Kh√¥ng c√≥ s√°ch n√†o trong th∆∞ vi·ªán.");
            return;
        }
        console.log("\nüìñ Danh s√°ch s√°ch trong th∆∞ vi·ªán:");
        this.books.forEach((book) => {
            console.log(
                `ID: ${book.getId()}, Ti√™u ƒë·ªÅ: ${book.getTitle()}, T√°c gi·∫£: ${book.getAuthor()}, S·ªë l∆∞·ª£ng: ${book.getStock()}, T√¨nh tr·∫°ng: ${book.getStatus()}`
            );
        });
    }
}

// ------------------- Demo -------------------
const library = new Library();

const book1 = new Book(1, "L·∫≠p tr√¨nh TypeScript", "Nguy·ªÖn VƒÉn A", 5, "available");
const book2 = new Book(2, "H·ªçc Java OOP", "Tr·∫ßn Th·ªã B", 3, "available");
const book3 = new Book(3, "C·∫•u tr√∫c d·ªØ li·ªáu & Gi·∫£i thu·∫≠t", "L√™ VƒÉn C", 2, "available");

// Th√™m s√°ch v√†o th∆∞ vi·ªán
library.addBook(book1);
library.addBook(book2);
library.addBook(book3);

// Xem s√°ch trong th∆∞ vi·ªán
library.showBooks();
